////////////////////////////////////////
// Particle.cpp
////////////////////////////////////////

#include "Particle.h"

////////////////////////////////////////////////////////////////////////////////

Particle::Particle(glm::vec3 pos, float m, bool f) {
	position = pos;
	normal = glm::vec3(0);
	mass = m;
	force = glm::vec3(0);
	velocity = glm::vec3(0);

	fixed = f;
}

////////////////////////////////////////////////////////////////////////////////

void Particle::applyForce(glm::vec3 f) {
	if (fixed == true) {
		return;
	}
	force += f;
}

////////////////////////////////////////////////////////////////////////////////

void Particle::integrate(float deltaTime) {
	if (fixed == true) {
		return;
	}

	glm::vec3 accel = (1 / mass) * force;
	velocity += accel * deltaTime;
	position += velocity * deltaTime;

	force = glm::vec3(0);
}

////////////////////////////////////////////////////////////////////////////////

glm::vec3 Particle::getPosition() {
	return position;
}

////////////////////////////////////////////////////////////////////////////////

glm::vec3 Particle::getVelocity() {
	return velocity;
}

////////////////////////////////////////////////////////////////////////////////

glm::vec3 Particle::getNormal() {
	return normal;
}

////////////////////////////////////////////////////////////////////////////////

bool Particle::isFixed() {
	return fixed;
}

////////////////////////////////////////////////////////////////////////////////

void Particle::setNormal(glm::vec3 norm) {
	normal = norm;
}

////////////////////////////////////////////////////////////////////////////////

void Particle::setPosition(glm::vec3 pos) {
	position = pos;
}

////////////////////////////////////////////////////////////////////////////////

void Particle::addNormal(glm::vec3 norm) {
	normal += norm;
}

////////////////////////////////////////////////////////////////////////////////

void Particle::addVelocity(glm::vec3 v) {
	velocity += v;
}